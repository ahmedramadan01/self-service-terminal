##### Installation Guide ######

Update the system
> $ sudo apt update && sudo apt upgrade -y

Install Apache and CUPS
> sudo apt install apache2 apache2-dev cups

Change into the directory where you want to install the self_service_terminal.
> $ cd /your/installation/path/

Create an virtual Python environment
> $ python3 -m venv self_service_terminal

Install the necessary pip packages
> $ pip install django django-import-export mod_wsgi Pillow pdf2image

TODO Setup WLAN
(there is an official tutorial: https://www.raspberrypi.org/documentation/configuration/wireless/access-point-routed.md)

TODO Setup System Apache
> $ sudo mod_wsgi-express install-module
Copy the output into the /etc/apache2/mods-available/wsgi.load file.
> $ sudo a2enmod wsgi

# Example on Raspbian for the 000-default.conf Apache config files
# This configuration also serves static and media files
"""
<VirtualHost *:80>
	# The ServerName directive sets the request scheme, hostname and port that
	# the server uses to identify itself. This is used when creating
	# redirection URLs. In the context of virtual hosts, the ServerName
	# specifies what hostname must appear in the request's Host: header to
	# match this virtual host. For the default virtual host (this file) this
	# value is not decisive as it is used as a last resort host regardless.
	# However, you must set it for any further virtual host explicitly.
	#ServerName www.example.com

	ServerAdmin webmaster@localhost
	DocumentRoot /var/www/html

	# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
	# error, crit, alert, emerg.
	# It is also possible to configure the loglevel for particular
	# modules, e.g.
	#LogLevel info ssl:warn

	ErrorLog ${APACHE_LOG_DIR}/error.log
	CustomLog ${APACHE_LOG_DIR}/access.log combined

	# For most configuration files from conf-available/, which are
	# enabled or disabled at a global level, it is possible to
	# include a line for only one particular virtual host. For example the
	# following line enables the CGI configuration for this host only
	# after it has been globally disabled with "a2disconf".
	#Include conf-available/serve-cgi-bin.conf
	
	WSGIDaemonProcess sp4 python-home=/home/pi/.venv/softwareprojekt_aok python-path=/home/pi/projects/2020-06-06_softwareprojekt_aok/softwareprojekt---self-service-terminal/sp4
	WSGIProcessGroup sp4 
	WSGIScriptAlias / /home/pi/projects/2020-06-06_softwareprojekt_aok/softwareprojekt---self-service-terminal/sp4/sp4/wsgi.py
	
	Alias /files/ /home/pi/projects/2020-06-06_softwareprojekt_aok/softwareprojekt---self-service-terminal/sp4/self_service_terminal/files/
	Alias /static/ /home/pi/projects/2020-06-06_softwareprojekt_aok/softwareprojekt---self-service-terminal/sp4/self_service_terminal/static/

	<Directory /home/pi/projects/2020-06-06_softwareprojekt_aok/softwareprojekt---self-service-terminal/sp4/self_service_terminal/static>
	Require all granted
	</Directory>

	<Directory /home/pi/projects/2020-06-06_softwareprojekt_aok/softwareprojekt---self-service-terminal/sp4/self_service_terminal/files>
	Require all granted
	</Directory>


	<Directory /home/pi/projects/2020-06-06_softwareprojekt_aok/softwareprojekt---self-service-terminal/sp4/sp4>
	<Files wsgi.py>
	Require all granted
	</Files>
	</Directory>	
	
</VirtualHost>
"""

(optional) Setup remote printer access via CUPS
> $ sudo usermod -a -G lpadmin $USER

Change /etc/cups/cupsd.conf as follows:

"""
# Only listen for connections from the local machine
# Listen localhost:631
Port 631

< Location / >
    Order allow,deny
    Allow @local
< /Location >

< Location /admin >
    Order allow,deny
    Allow @local
< /Location >

< Location /admin/conf >
    AuthType Default
    Require user @SYSTEM
    Order allow,deny
    Allow @local
< /Location >
"""

Restart cups server
> $ sudo /etc/init.d/cups restart

The CUPS GUI Interface can now be accessed via <Pi's IP or Hostname>:631